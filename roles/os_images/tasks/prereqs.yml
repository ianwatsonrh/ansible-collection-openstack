---
- name: Include OS family-specific variables
  ansible.builtin.include_vars: "{{ ansible_facts.os_family }}.yml"

- name: Ensure required packages are installed
  ansible.builtin.package:
    name: "{{ (os_images_package_dependencies + os_images_package_dependencies_extra) | select | list }}"
    state: present
  become: true

# The rpm-distro element executes 'semanage' during its cleanup phase.
- name: Ensure diskimage-builder SELinux dependencies are installed
  vars:
    package_name: python3-policycoreutils
  ansible.builtin.package:
    name: "{{ package_name }}"
    state: present
  when:
    - ansible_facts.selinux
    - ansible_facts.selinux.status != 'disabled'
    - ansible_facts.os_family == "RedHat"
  become: true

- name: Ensure download cache dir exists
  ansible.builtin.file:
    path: "{{ os_images_cache }}"
    owner: "{{ ansible_facts.user_uid }}"
    group: "{{ ansible_facts.user_gid }}"
    state: directory
    mode: "0755"
  become: true

- name: Run multiarch/qemu-user-static image to support cross-arch build
  ansible.builtin.command:
    # We already have a precheck for presence of docker executable so use it here
    cmd: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  # Using --reset means that we always change something
  changed_when: true
  become: true
  when: os_images_list |
        selectattr("architecture", "defined") |
        rejectattr("architecture", "equalto", ansible_facts.architecture) |
        length > 0
